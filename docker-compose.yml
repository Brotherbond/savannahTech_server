services:
  client:
    container_name: "${APP_NAME:-'test'}_client"
    build:
      context: ../client
      dockerfile: Dockerfile
    ports:
      - '${CLIENT_PORT:-3000}:3000'
    volumes:
      - '../client:/app'
    networks:
      - test
  server:
    container_name: "${APP_NAME:-'test'}_server"
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - '${SERVER_PORT:-4000}:3000'
    volumes:
      - './:/app'
    networks:
      - test
  mongo:
    image: mongo:latest
    container_name: "${APP_NAME:-'test'}_mongodb"
    ports:
      - '${MONGODB_PORT:-27017}:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:-''}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-''}"
    volumes:
      - test_mongodb_data:/data/db
    networks:
      - test
  redis:
    image: 'redis'
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - 'test_redis_data:/data'
    networks:
      - test
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      retries: 3
      timeout: 5s
networks:
  test:
    driver: bridge

volumes:
  test_mongodb_data:
  test_redis_data:
